version: 2.1
orbs:
  heroku: circleci/heroku@1.2.5
  jira: circleci/jira@1.3.0
jobs:
  build:
    working_directory: ~/aus-ddr-api
    docker:
      - image: cimg/base:2020.01
    resource_class: medium
    steps:
      - checkout
      - setup_remote_docker
      - heroku/install
      - run:
          name: Build application Docker image
          command: |
            docker build -t ${HEROKU_APP_NAME} .
      - heroku/push-docker-image:
          process-types: web
      - heroku/release-docker-image:
          process-types: web
  test:
    working_directory: ~/aus-ddr-api
    machine:
      image: ubuntu-2004:202010-01
    resource_class: medium
    steps:
      - checkout
      - run:
          name: Add signing keys
          command: |
            wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
            sudo dpkg -i packages-microsoft-prod.deb
      - run:
          name: Install dotnet-sdk-5.0
          command: |
            sudo apt-get update
            sudo apt-get install -y apt-transport-https && \
            sudo apt-get update && \
            sudo apt-get install -y dotnet-sdk-5.0
      - run:
          name: Restore packages
          command: dotnet restore
      - run:
          name: Run unit tests
          command: dotnet test aus-ddr-api.UnitTests -v n
      - run:
          name: Spin up Postgres
          command: docker-compose --env-file ./.integration.env up -d
      - run:
          name: Run integration tests
          command: dotnet test aus-ddr-api.IntegrationTests -v n
      - run:
          name: Bring down Postgres
          command: docker-compose down
workflows:
  build_and_deploy:
    jobs:
      - test:
          filters:
            branches:
              only: master
      - build:
          name: deploy-staging
          context:
            - staging
          post-steps:
            - jira/notify
          filters:
            branches:
              only: master
          requires:
            - test
      - block_production:
          type: approval
          requires:
            - deploy-staging
      - build:
          name: deploy-production
          context:
            - production
          post-steps:
            - jira/notify
          filters:
            branches:
              only: master
          requires:
            - block_production